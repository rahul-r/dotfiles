" Line numbering
set relativenumber
set number

" set to auto read when a file is changed from the outside
set autoread

" Set 7 lines to the cursor - when moving vertically using j/k
set so=7

" Turn on the Wild menu (for filename completion)
set wildmenu
set wildmode=list:longest,full

" Ignore case when searching
set ignorecase

" When searching try to be smart about cases 
set smartcase

" Highlight search results
set hlsearch

" Highlight words while searching
set incsearch

" Don't redraw while executing macros (good performance config)
set lazyredraw

" the cursor will briefly jump to the matching brace when you insert one
set showmatch
" How many tenths of a second to blink when matching brackets
set mat=2

" Enforce laziness
"nnoremap <Left> :echo "Don't be silly, use h"<CR>
"nnoremap <Down> :echo "Don't be silly, use j"<CR>
"nnoremap <Up> :echo "Don't be silly, use k"<CR>
"nnoremap <Right> :echo "Don't be silly, use l"<CR>

"split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

nnoremap <C-n> :NERDTree<CR>
nnoremap <C-t> :NERDTreeToggle<CR>
nnoremap <C-f> :NERDTreeFind<CR>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                       Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Enable syntax highlighting
syntax enable
" Enable 256 colors
set t_Co=256

" 1 tab == 4 spaces
set shiftwidth=4
set tabstop=4

" Linebreak on 500 characters
set linebreak
set textwidth=500

set ai "Auto indent
set si "Smart indent
au! FileType python setl nosmartindent " Disable smart indent for Python
set wrap "Wrap lines

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"    Turn persistent undo on 
"    means that you can undo even when you close a buffer/VIM
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
try
    set undodir=~/.vim/tmp/undo
    set undofile
catch
endtry
""""""""""""""""""""""""""""""
"       Opening/Closing
""""""""""""""""""""""""""""""
" Return to last edit position when opening files
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" Delete trailing white space on save, useful for some filetypes ;)
fun! CleanExtraSpaces()
    let save_cursor = getpos(".")
    let old_query = getreg('/')
    silent! %s/\s\+$//e
    call setpos('.', save_cursor)
    call setreg('/', old_query)
endfun

if has("autocmd")
    autocmd BufWritePre *.txt,*.js,*.py,*.wiki,*.sh,*.coffee :call CleanExtraSpaces()
endif

call plug#begin('~/.vim/plugged')

" Themes
Plug 'crucerucalin/peaksea.vim'
Plug 'EdenEast/nightfox.nvim'

Plug 'VundleVim/Vundle.vim'
Plug 'vim-airline/vim-airline'
" Plug 'tpope/vim-fugitive'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'airblade/vim-gitgutter'
Plug 'davidhalter/jedi-vim'
Plug 'leafgarland/typescript-vim'
" Plugins for rust
Plug 'rust-lang/rust.vim'
Plug 'rust-lang/rls'

" nerdtree
Plug 'preservim/nerdtree'
Plug 'ryanoasis/vim-devicons'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'Xuyuanp/nerdtree-git-plugin'

call plug#end()

" Indent commants with code in languages like Python, Perl
filetype plugin indent on

" Set the color theme
colorscheme nightfox
set background=dark

set mouse=a

" Always show the statusbar	
set laststatus=2

set encoding=utf-8
" Tell airline to use powerline fonts
let g:airline_powerline_fonts = 1

" Gvim settings
set guioptions-=T  "remove toolbar
"set guifont=Ubuntu\ Mono\ derivative\ Powerline\ 12
